{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block main %}
    <div class="main">
        <h1>Report</h1>

        <div class="grid">
            <div class="list span3">
                <h3>Länkar</h3>
                <ul>
                    <li><a href="#kmom01">Kmom01</a></li>
                    <li><a href="#kmom02">Kmom02</a></li>
                    <li><a href="#kmom03">Kmom03</a></li>
                    <li><a href="#kmom04">Kmom04</a></li>
                    <li><a href="#kmom05">Kmom05</a></li>
                    <li><a href="#kmom06">Kmom06</a></li>
                    <li><a href="#kmom07">Kmom07</a></li>
                </ul>
            </div>
            
            <div class="span4">
                <h3 id="kmom01">Kmom01</h3>
                <div class="txt">
                    <p>
                        Mina förkunskaper och tidigare erfarenheter kring objectorioentering är det som jag har lärt mig från
                        kursen oopyhton och Programmering med javascript.
                    </p>
                    <br>
                    <p>
                        Grunderna man behöver veta och förstå är att man måste börja med att definiera en klass, 
                        Ge klassen engenskaper (variabler som tillhör klassen) och metoder (funktioner som tillhör klassen)
                        och sen skapa (instantierar) ett objekt  baserad på klassens definition.
                    </p>
                    <br>
                    <p>
                        Structuren påminer mig om när Pico ramverket som användes i designkursen, Jag tycker och att jobba på
                        detta sätt i och med att allt känns väldigt structurerad och enkelt att komma åt.
                    </p>
                    <br>
                    <p>
                        Jag gillar artikeln, den har massa bra länkar och får en att vilja veta mer om php. Dem delar som jag 
                        jag finner är mest intressant är testing delen så jag känner att jag inte riktigt har ett bra sätt att
                        testa det mesta jag skriver i php, coding practices då jag inte är helt säker på php och databases då
                        jag tycker att det är roligt att jobba med databaser.
                    </p>
                    <br>
                    <p>
                        Jag har lärt mig om Symfony ramverket och hur det installeras/används, hur klasser i php ser ut, hur 
                        man använder php klasser för hemsidan, Hur man får ut JSON utskrifter och jag känner mig taggad för 
                        denna kurs.
                    </p>
                </div>
            </div>
            
            <div class="span4">
                <h3 id="kmom02">Kmom02</h3>
                <div class="txt">
                    <p>
                        Arv tillåter att en klass ärver engenskaper/metoder av en anna klass, med kompositionså menas det 
                        att en klass innehåller instans av andra klasser som en del av sig, trait är metoder som kan inkluderas
                        i klasser och interface är som en kontrak mellan klasser som beskriver metod dom en klass måste ha.
                    </p>
                    <br>
                    <p>
                        I uppgiften använde jag mig av ärv och komposition. Jag är inte supernöjd med den, en förbättring skulle
                        nog vara att använda mig lite mer av dem andra konstructioner och styla mer.
                    </p>
                    <br>
                    <p>
                        Stora uppgifter och mycket mer krävande. Men roligt.
                    </p>
                    <br>
                    <p>
                        konstructioner, lite mer om Twig och även hur GET/POST methoder används i symfony.
                    </p>
                </div>
            </div>

            <div class="span4">
                <h3 id="kmom03">Kmom03</h3>
                <div class="txt">
                    <p>
                        De kändes lite ovant, men jag tyckte ändå att den ger en grund till hur aplikationen ska se ut
                        och ger en bra grund att gå tillbaka till ifall något känns oklart när man böejar med själva kodningen. 
                    </p>
                    <br>
                    <p>
                        Jag löste uppgiften genom att försöka strukturera det så got som möjligt innan jag började skriva koden. Jag 
                        skapade en flödesdiagram och psuedokod. Med hjälp av det så kunden hade jag en grund för att lösa uppgiften.
                        Jag är lite missnöjd med den. Tex så hhade jag kunnan strukturera koden bättre och förminska det kod som skrevs i 
                        Controller. 
                    </p>
                    <br>
                    <p>
                        Jag tycker om att koda i symfony, det känns enkelt att ha reda på koden.
                    </p>
                    <br>
                    <p>
                        PHP classer och rättning med phpstan/phpmd. Även om det inte implementerades här så har jag även lärt mig om enhetstestning.
                    </p>
                </div>
            </div>

            <div class="span4">
                <h3 id="kmom04">Kmom04</h3>
                <div class="txt">
                    <p>
                        Det kändes rimligt att gör det, i och med att jag redan har testat det i oopyhton. 
                    </p>
                    <br>
                    <p>
                        Ganska bra skulle jag säga fick mer än 90 % på två område och strax under 90 på en.
                    </p>
                    <br>
                    <p>
                        Jag var tvungen att göra lite ändringar på koden. med för det mesta så tycker jag att det var testbar kod.
                    </p>
                    <br>
                    <p>
                        Ja jag valde att göra det, under testningen så insåg jag att visa delar av koden var onödiga eller kunde
                        skrivas om på enklare sätt.
                    </p>
                    <br>
                    <p>
                        Ja, det tycker jag. Nu har jag själv inte den snyggaste kod. men Jag skulle ändå påstå att om man har snygg kod från början
                        så blir det enklare att testa det också.
                    </p>
                    <br>
                    <p>
                        PHPUnit, PHPdoc och även mock.
                    </p>
                </div>
            </div>

            <div class="span4">
                <h3 id="kmom05">Kmom05</h3>
                <div class="txt">
                    <p>
                        Det gick väldigt bra, Det enda jag tänkte på var att det var väldigt smidgt sätt att arbeta med 
                        klasser och databaser. 
                    </p>
                    <br>
                    <p>
                        Jag ville att det skulle vara så enkel och tydligt som möjligt. En sida där man ser alla böcker
                        och två knappar så att man kan lägga till en bok eller rensa biblioteket. en sida där man lägger
                        till en bok och en sida där man kan se/ändra/radera info om en bok.
                    </p>
                    <br>
                    <p>
                        Det gick bra att jobba med orm i crud, det kändes väldigt smidigt till skillnad från när man med sql
                        satser i fetch och await functioner i js.
                    </p>
                    <br>
                    <p>
                        Jag tycker att ORM föränklar processen och        <h1>About</h1>

            <div class="grid">
                <div class="list span3">
                    <h3>Länkar</h3>
                    <ul>
                        <li><a href="https://github.com/dbwebb-se/mvc">Kursens Git-repo</a></li>
                        <li><a href="https://github.com/teophilsimao/report">Mitt Git-repo</a></li>
                    </ul>
                </div>

                <div class="span4">
                    <h3>MVC</h3>
                    <div class="txt">
                        <p>
                            Kursen MVC lär ut objektorienterad programmering i PHP. Vi utforskar grundläggande 
                            objektorienterade koncept och applicerar 
                            dem i webbutveckling med ramverk, inklusive databashantering och enhetstestning
                        </p>
                    </div>
                </div>

                <div class="bild span5 radius">
                    <img src="{{ asset('img/php.jpg') }}" alt="PHP">
                </div>
            </div> gör det enklare att interaktera med databasen. Koden blir
                        renare och enklare att förstå. Mycket smidigare än sql satser och procedurer.
                    </p>
                    <br>
                    <p>
                        Typ allt som introducerades i detta kmom. dvs hela Doctrine Orm och hur man arbetar med det, och även
                        hur man sparar bild i databasen.
                    </p>
                </div>
            </div>

            <div class="span4">
                <h3 id="kmom06">Kmom06</h3>
                <div class="txt">
                    <p>
                        Jag tycker att phpmetrics är ett bra verktyg, väldigt tydlig och lätt att göra med. Det var ganska
                        trevligt att kunna se en visualisering över hur koderna är relaterade till varandra. Jag uppskattade
                        nog mest att kunna se complexity & defects.
                    </p>
                    <br>
                    <p>
                        Integrering av Scrutinizer gick bra, många failed builds men det löste sig efter några ändringar i koden.
                        Att få bedges kändes lite proffsigt och roligt. min kodtäckning var på 22% och kvalitet på 97,5%. men innan
                        jag fick det så failade jag bygget ett antal gånger.
                    </p>
                    <br>
                    <p>
                        Ja, det tror jag. De badges man får är inte påhittade utan de har skapats och utvecklats baserat på ett 
                        konsensus mellan duktiga utvecklare.
                    </p>
                    <br>
                    <p>
                        Phpmetrics, scrutinizer och dem 6 C.    
                    </p>
                </div>
            </div>

            <div class="span4">
                <h3 id="kmom07">Kmom07</h3>
                <div class="txt">
                    <p>Redovisningstext för Kmom07.</p>
                </div>
            </div> 
        </div>
    </div>
{% endblock %}